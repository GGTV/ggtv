video.count=select count(*) as n from Video where valid=1
video.countByCategory=select count(*) as n from Video, Stream where Video.id=video_id and valid=1 and category={0}
video.my.count=select count(*) as n from Video, Stream where Video.id=video_id and valid=1 and source_id in (select id from User where access_token={0})
video.personal.count=select count(*) as n from Video, Stream where Video.id=video_id and valid=1 and source_id in ({0})
video.my.countByCategory=select count(*) as n from Video, Stream where Video.id=video_id and valid=1 and source_id in (select id from User where access_token={0}) and category={1}
video.personal.countByCategory=select count(*) as n from Video, Stream where Video.id=video_id and valid=1 and source_id in ({0}) and category={1}
video.regional.count=select count(*) as n from Video, Stream where Video.id=video_id and valid=1 and source_id in (select id from User where country={0})
video.regional.countByCategory=select count(*) as n from Video, Stream where Video.id=video_id and valid=1 and source_id in (select id from User where country={0}) and category={1}
video.listByPaging=select id, url as share_url, description, source_url, title, thumb, streamCount, FROM_UNIXTIME(max_created_time) lastPostTime, FROM_UNIXTIME(min_created_time) firstPostTime, category, duration, `key` from Video, (select video_id, count(video_id) streamCount, max(created_time) max_created_time, min(created_time) min_created_time from Stream group by video_id) t where id=video_id and valid=1 {0} limit {1}, 50
video.list=select id, url as share_url, description, source_url, title, thumb, streamCount, FROM_UNIXTIME(max_created_time) lastPostTime, FROM_UNIXTIME(min_created_time) firstPostTime, category, duration, `key` from Video, (select video_id, count(video_id) streamCount, max(created_time) max_created_time, min(created_time) min_created_time from Stream group by video_id) t where id=video_id and valid=1 {0}
video.listByPagingAndTime=select id, url as share_url, description, source_url, title, thumb, streamCount, FROM_UNIXTIME(max_created_time) lastPostTime, FROM_UNIXTIME(min_created_time) firstPostTime, category, duration, `key` from Video, (select video_id, count(video_id) streamCount, max(created_time) max_created_time, min(created_time) min_created_time from Stream group by video_id) t where id=video_id and valid=1 {0} {1} limit {2}
video.listByPagingTimeAndCategory=select id, url as share_url, description, source_url, title, thumb, streamCount, FROM_UNIXTIME(max_created_time) lastPostTime, FROM_UNIXTIME(min_created_time) firstPostTime, category, duration, `key` from Video, (select video_id, count(video_id) streamCount, max(created_time) max_created_time, min(created_time) min_created_time from Stream group by video_id) t where id=video_id and valid=1 and category={3} {0} {1} limit {2}
video.my.listByPagingAndTime=select id, url as share_url, description, source_url, title, thumb, streamCount, FROM_UNIXTIME(max_created_time) lastPostTime, FROM_UNIXTIME(min_created_time) firstPostTime, category, duration, `key` from Video, (select video_id, count(video_id) streamCount, max(created_time) max_created_time, min(created_time) min_created_time from Stream where source_id in (select id from User where access_token={3}) group by video_id) t where id=t.video_id and valid=1 {0} {1} limit {2}
video.personal.listByPagingAndTime=select id, url as share_url, description, source_url, title, thumb, streamCount, FROM_UNIXTIME(max_created_time) lastPostTime, FROM_UNIXTIME(min_created_time) firstPostTime, category, duration, `key` from Video, (select video_id, count(video_id) streamCount, max(created_time) max_created_time, min(created_time) min_created_time from Stream where source_id in ({3}) group by video_id) t where id=t.video_id and valid=1 {0} {1} limit {2}
video.my.listByPagingTimeAndCategory=select id, url as share_url, description, source_url, title, thumb, streamCount, FROM_UNIXTIME(max_created_time) lastPostTime, FROM_UNIXTIME(min_created_time) firstPostTime, category, duration, `key` from Video, (select video_id, count(video_id) streamCount, max(created_time) max_created_time, min(created_time) min_created_time from Stream where source_id in (select id from User where access_token={3}) group by video_id) t where id=t.video_id and valid=1 and category={4} {0} {1} limit {2}
video.personal.listByPagingTimeAndCategory=select id, url as share_url, description, source_url, title, thumb, streamCount, FROM_UNIXTIME(max_created_time) lastPostTime, FROM_UNIXTIME(min_created_time) firstPostTime, category, duration, `key` from Video, (select video_id, count(video_id) streamCount, max(created_time) max_created_time, min(created_time) min_created_time from Stream where source_id in ({3}) group by video_id) t where id=t.video_id and valid=1 and category={4} {0} {1} limit {2}
video.regional.listByPagingAndTime=select id, url as share_url, description, source_url, title, thumb, streamCount, FROM_UNIXTIME(max_created_time) lastPostTime, FROM_UNIXTIME(min_created_time) firstPostTime, category, duration, `key` from Video, (select video_id, count(video_id) streamCount, max(created_time) max_created_time, min(created_time) min_created_time from Stream where source_id in (select id from User where country={3}) group by video_id) t where id=t.video_id and valid=1 {0} {1} limit {2}
video.regional.listByPagingTimeAndCategory=select id, url as share_url, description, source_url, title, thumb, streamCount, FROM_UNIXTIME(max_created_time) lastPostTime, FROM_UNIXTIME(min_created_time) firstPostTime, category, duration, `key` from Video, (select video_id, count(video_id) streamCount, max(created_time) max_created_time, min(created_time) min_created_time from Stream where source_id in (select id from User where country={3}) group by video_id) t where id=t.video_id and valid=1 and category={4} {0} {1} limit {2}
stream.list=select name, message from Stream left join User on source_id=User.id where video_id={0}
user.getByToken=select * from User where access_token={0}
user.exist=select id from User where id={0}
user.updateToken=update User set access_token={1} where id={0}
###demo###
user.add=insert into User (id, name, first_name, middle_name, last_name, gender, locale, link, create_time) values ({0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, now()) on duplicate key update name={1}, first_name={2}, middle_name={3}, last_name={4}, gender={5}, locale={6}, link={7}
user.loadId=select id from User
##########
user.update=update User set {1} where id={0}
user.addFriends=insert into User_friend (user_id, friend_id_list) values ({0}, {1}) on duplicate key update friend_id_list={1}
user.getFriends=select uf.* from User_friend uf, User u where uf.user_id=u.id and u.access_token={0}
category.list=select distinct category from Video where valid=1 and category is not null order by category
category.me.list=select distinct category from Video, Stream where Video.id=video_id and source_id in (select id from User where access_token={0}) and valid=1 and category is not null order by category
category.personal.list=select distinct category from Video, Stream where Video.id=video_id and source_id in ({0}) and valid=1 and category is not null order by category
category.regional.list=select distinct category from Video, Stream where Video.id=video_id and source_id in (select id from User where country={0}) and valid=1 and category is not null order by category

video.updateState=update Video set valid={1}, error_code={2} where `key`={0}